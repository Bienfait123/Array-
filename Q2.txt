Q2. As array of product to be bought given names of product and price in dollars below try answer all questions Use your favorite programming
const item = [ {name: 'Bike', price:100}, {name: 'TV', price:200}, {name: 'Album', price:10}, {name: 'Book', price:5}, {name: 'Phone', price:500}, {name: 'Computer', price:1000}, ],
1 . Filter and show the product that will be bought when you don't have much money I mean Cheap one
2 . Filter and show the product that will be expensive in the array
3 . Calculate the full price of all product combined
4 . Calculate the full price of all product combined and remove product that are under the 10 dollar


Answers
*******
We do have an array of the products
const item = [ {name: 'Bike', price:100}, {name: 'TV', price:200}, {name: 'Album', price:10}, {name: 'Book', price:5}, {name: 'Phone', price:500}, {name: 'Computer', price:1000}, ],




We have To create the Array items.

const items = [
    { name: 'Bike',     price: 100 },
    { name: 'TV',       price: 200 },
    { name: 'Album',    price: 10 },
    { name: 'Book',     price: 5 },
    { name: 'Phone',    price: 500 },
    { name: 'Computer', price: 1000 },
    
   
]
1.
Using Filter Method --filter () -- we can filter products with less price or the one which are cheap.

To filter the items that are cheap (under 100 price)
const filteredItems = items.filter((item) => {
    Return item.price >= 200
});  
//this will display 
0
: 
{name: 'Bike', price: 100}
1
: 
{name: 'Album', price: 10}
2
: 
{name: 'Book', price: 5}
//*the cheapest product is book of price 5.

2.to filter and show the expensive product.
const filteredItems = items.filter((item) => {
    return item.price >= 200
});  
//*this will this display.
0
: 
{name: 'TV', price: 200}
1
: 
{name: 'Phone', price: 500}
2
: 
{name: 'Computer', price: 1000}

This will show that the product wich is expensive is computer of price 1000.

3.To calculate the sum of all the array.
we will create A construxt "total" for us to be able to apple the sum.

const total = items.reduce((currentValue, item) => {
    return item.price + currentValue;
}, 0);
console.log(total);//the sum is  1815 
